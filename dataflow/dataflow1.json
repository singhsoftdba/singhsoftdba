{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          {_id} as string,",
				"          {_acl} as (creator as string),",
				"          actualDiversity as integer,",
				"          actualLocal as integer,",
				"          addressJobsiteCountry as string,",
				"          addressPermanentCity as string,",
				"          addressPermanentCountry as string,",
				"          addressPermanentState as string,",
				"          defaultPackageContractualReviewDuration as integer,",
				"          defaultPackagePendingDuration as integer,",
				"          defaultRFIContractualReviewDuration as integer,",
				"          defaultPendingItemCompletionDuration as integer,",
				"          defaultPunchListCompletionDuration as integer,",
				"          defaultWarrantyCompletionDuration as integer,",
				"          deliverableTypes as string[],",
				"          estimatedProjectValue as integer,",
				"          isActive as boolean,",
				"          isConfidential as boolean,",
				"          isPrivate as boolean,",
				"          name as string,",
				"          planDiversity as integer,",
				"          planLocal as integer,",
				"          projectionCost as integer,",
				"          projectionFee as integer,",
				"          refCompaniesAdmin as ({_id} as string, isActive as boolean, name as string, isManagingPhotos as boolean, logo as (entityID as string, creatorID as string, mimeType as string, filename as string, created as string, downloadURL as string, thumbnailId as string, thumbnailURL as string, normalizedURL as string, normalizedID as string, size as integer))[],",
				"          refTypes as (isActive as boolean, name as string, {_id} as string)[],",
				"          status as (name as string, rank as integer),",
				"          size as integer,",
				"          isCostLocked as boolean,",
				"          savingsThreshold as integer,",
				"          boxRefs as (Name as string, type as string, ID as string, SharedID as string, SharedURL as string, EgnyteID as string, EgnytePath as string)[],",
				"          isSyncable as boolean,",
				"          {_geoloc} as string[],",
				"          keywords as string,",
				"          durationConstruction as integer,",
				"          idDomino as string,",
				"          idSQL as integer,",
				"          {_kmd} as (lmt as string, ect as string),",
				"          refCompanyAdminManaging as ({_id} as string, isActive as boolean, name as string),",
				"          addressJobsiteCity as string,",
				"          addressJobsitePostal as string,",
				"          addressJobsiteState as string,",
				"          addressJobsiteStreet1 as string,",
				"          addressPermanentPostal as string,",
				"          addressPermanentStreet1 as string,",
				"          businessUnitManaging as string,",
				"          dateContractualEnd as string,",
				"          dateContractualStart as string,",
				"          dateContractualSubstantial as string,",
				"          datePreconEnd as string,",
				"          datePreconStart as string,",
				"          dateStaffingEnd as string,",
				"          dateStaffingStart as string,",
				"          dateWarrantyEnd as string,",
				"          logo as (created as string, creatorID as string, downloadURL as string, entityID as string, filename as string, mimeType as string, size as integer, thumbnailId as string, thumbnailURL as string, normalizedID as string, normalizedURL as string),",
				"          number as string,",
				"          numberJobControlling as string,",
				"          numbersJob as (businessUnit as string, number as string, type as string, description as string, feeEarnedInPreviousYears as double, feeJointVenturePercentage as integer, feeAttainment as (year as integer, percentage as double)[], feeSavingsThreshold as integer, feeSavingsPercentage as integer, feeCumulativeLabor as integer, dateSync as string, isBillable as boolean)[],",
				"          pendingItemsCategories as string[],",
				"          punchListTypes as string[],",
				"          projectAliases as string[],",
				"          photo as (created as string, creatorID as string, downloadURL as string, entityID as string, filename as string, mimeType as string, normalizedID as string, normalizedURL as string, size as integer, thumbnailId as string, thumbnailURL as string),",
				"          planRoomDisciplines as (name as string, rank as integer)[],",
				"          planRoomPackageReleases as string[],",
				"          planRoomTypes as string[],",
				"          refLocations as ({_id} as string, isActive as boolean, name as string, size as integer, keywords as string)[],",
				"          refMarkets as (isActive as boolean, name as string, {_id} as string)[],",
				"          refMarketPrimary as (isActive as boolean, name as string, {_id} as string),",
				"          submittalTypes as string[],",
				"          submittalCategories as string[],",
				"          refCompaniesAdminPercentages as (refCompany as (isActive as boolean, name as string, {_id} as string), percent as integer)[],",
				"          timezone as string,",
				"          isBillable as boolean,",
				"          totalCompany as integer,",
				"          totalPeople as integer,",
				"          roleCounts as (name as string, counts as (company as string, people as integer, refCompany as ({_id} as string, isActive as boolean, name as string))[])[],",
				"          warrantyCategories as string[],",
				"          rfiCategories as string[],",
				"          changeEventsCategories as string[],",
				"          deliveryMethod as string,",
				"          description as string,",
				"          imageTypes as string[],",
				"          addressJobsiteStreet2 as string,",
				"          businessStrategies as string[],",
				"          refManagingOffice as (isActive as boolean, name as string, {_id} as string),",
				"          refRegions as (isActive as boolean, city as string, state as string, country as string, name as string, {_id} as string)[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> source1"
			]
		}
	}
}